#    KlassiTech Automated Testing Tool
#    Created by Larry Goddard
#
#    Copyright Â© klassitech 2016 - Larry Goddard <larryg@klassitech.co.uk>
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2.0

references:
  container_config: &container_config
    working_directory: ~/klassi-js
    docker:
      - image: circleci/openjdk:11.0.2-jdk-node-browsers

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-klassi-repo-{{ .Environment.CIRCLE_SHA1 }}
        - v1-klassi-repo-{{ .Branch }}
        - v1-klassi-repo

  yarn_cache_key: &yarn_cache_key
    v3-dependency-yarn-{{ checksum "yarn.lock" }}
  yarn_backup_cache_key: &yarn_backup_cache_key
    v3-dependency-yarn

  restore_yarn_dependencies: &restore_yarn_dependencies
    restore_cache:
      keys:
        - *yarn_cache_key
        - *yarn_backup_cache_key

  restore_acceptance_builds: &restore_acceptance_builds
    restore_cache:
      key: v1-acceptance-build-{{ .Environment.CIRCLE_SHA1 }}

jobs:
  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout

      - save_cache:
          key:  v1-klassi-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - .

  install_dependencies:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_yarn_dependencies

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - run:
          name: Install klassi dependencies
          command: yarn install

      - save_cache:
          key: *yarn_cache_key
          paths:
            - "~/.cache/yarn"
            - node_modules

  # Integration test base configuration
  # Integration test base configuration
  integration_test_base: &integration_test_base
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_yarn_dependencies
      - *restore_acceptance_builds

      - run:
          name: Create Test-Result Directory
          command: mkdir ./test-results

      - run:
          name: Set BrowserStack Local Identifier
          command: echo 'export BROWSERSTACK_LOCAL_IDENTIFIER=integration_test_$BROWSER_NAME_run_$CIRCLE_BUILD_NUM' >> $BASH_ENV

      - run:
          name: Start BrowserStack Local
#          command: ./scripts/ci/browserstack-local.sh start
          command: node runtime/remotes/browserstackLocal.js start
          background: true

      - run:
          name: Check BrowserStack Local running
#          command: sleep 5;./scripts/ci/browserstack-local.sh check
          command: sleep 5;node runtime/remotes/browserstackLocal.js check

#      - run:
#          name: Integration Test Run
#          command: yarn run dev
##          command: |
##            ./node_modules/.bin/nightwatch \
##              -c config/nw-browserstack.conf.js \
##              -t tests/integration/marking.js \
##              -e $BROWSER_NAME
#          environment:
#            TEST_REPORT_PATH: ./test-results

      - run:
          name: Download Selenium
          command: curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar

      - run:
          name: Start Selenium Server
          command: java -jar selenium-server-standalone-3.5.3.jar -log test-results/selenium.log
          background: true

      - run:
          name: Install Dependencies
          command: yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Integration Test Run
          command: yarn run dev

      - store_artifacts:
          path: artifacts

      - store_test_results:
          path: ./test-results

  integration_test_chrome:
    <<: *integration_test_base
    environment: { BROWSER_NAME: 'chrome' }

  integration_test_iexplorer:
    <<: *integration_test_base
    environment: { BROWSER_NAME: 'iexplorer' }

  integration_test_edge:
    <<: *integration_test_base
    environment: { BROWSER_NAME: 'edge' }

  integration_test_firefox:
    <<: *integration_test_base
    environment: { BROWSER_NAME: 'firefox' }

  integration_test_safari:
    <<: *integration_test_base
    environment: { BROWSER_NAME: 'safari' }

  integration_test_macChrome:
    <<: *integration_test_base
    environment: { BROWSER_NAME: 'macChrome' }

  integration_test_tabletiPad:
    <<: *integration_test_base
    environment: { BROWSER_NAME: 'tabletiPad' }

  integration_test_tabletGalaxy:
    <<: *integration_test_base
    environment: { BROWSER_NAME: 'tabletGalaxy' }

  integration_test_build:
    <<: *container_config
    steps:
      - run: "echo 'FINISHED'"

  # Acceptance test base configuration
  # Acceptance test base configuration
  acceptance_test_base: &acceptance_test_base
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_yarn_dependencies

      - run:
          name: Create Test-Result Directory
          command: mkdir ./test-results

      - run:
          name: Download Selenium
          command: curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar

      - run:
          name: Start Selenium Server
          command: java -jar selenium-server-standalone-3.5.3.jar -log test-results/selenium.log
          background: true

      - run:
          name: Install Dependencies
          command: yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - run:
          name: Set BrowserStack Local Identifier
          command: echo 'export BROWSERSTACK_LOCAL_IDENTIFIER=acceptance_test_$BROWSER_NAME_run_$CIRCLE_BUILD_NUM' >> $BASH_ENV

      - run:
          name: Acceptance Test Run
          command: yarn run uat

      - store_artifacts:
          path: artifacts

      - store_test_results:
          path: ./test-results

  acceptance_test_chrome:
    <<: *acceptance_test_base
    environment: { BROWSER_NAME: 'chrome' }

  acceptance_test_iexplorer:
    <<: *acceptance_test_base
    environment: { BROWSER_NAME: 'iexplorer' }

  acceptance_test_edge:
    <<: *acceptance_test_base
    environment: { BROWSER_NAME: 'edge' }

  acceptance_test_firefox:
    <<: *acceptance_test_base
    environment: { BROWSER_NAME: 'firefox' }

  acceptance_test_safari:
    <<: *acceptance_test_base
    environment: { BROWSER_NAME: 'safari' }

  acceptance_test_macChrome:
    <<: *acceptance_test_base
    environment: { BROWSER_NAME: 'macChrome' }

  acceptance_test_tabletiPad:
    <<: *acceptance_test_base
    environment: { BROWSER_NAME: 'tabletiPad' }

  acceptance_test_tabletGalaxy:
    <<: *acceptance_test_base
    environment: { BROWSER_NAME: 'tabletGalaxy' }

  acceptance_test_build:
    <<: *container_config
    steps:
      - run: "echo 'FINISHED'"


workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code

      - install_dependencies:
          requires:
            - checkout_code

      - integration_test_build:
          requires:
            - checkout_code
            - install_dependencies

      - run_basic_integration_tests:
          type: approval
          requires:
            - integration_test_build
          filters:
            branches:
              ignore:
                - develop
                - master

      - integration_test_chrome:
          requires:
            - integration_test_build
            - run_basic_integration_tests

      - integration_test_iexplorer:
          requires:
            - integration_test_build
            - run_basic_integration_tests

      - run_all_integration_tests:
          type: approval
          requires:
            - integration_test_build
            - run_basic_integration_tests
          filters:
            branches:
              ignore:
                - develop
                - master

      - integration_test_edge:
          requires:
            - integration_test_build
            - run_all_integration_tests

      - integration_test_firefox:
          requires:
            - integration_test_build
            - run_all_integration_tests

      - integration_test_safari:
          requires:
            - integration_test_build
            - run_all_integration_tests

      - integration_test_macChrome:
          requires:
            - integration_test_build
            - run_all_integration_tests

      - integration_test_tabletiPad:
          requires:
            - integration_test_build
            - run_all_integration_tests

      - integration_test_tabletGalaxy:
          requires:
            - integration_test_build
            - run_all_integration_tests

      - acceptance_test_build:
          requires:
            - checkout_code
            - install_dependencies

      - run_basic_acceptance_tests:
          type: approval
          requires:
            - acceptance_test_build
          filters:
            branches:
              ignore:
                - develop
                - master

      - acceptance_test_chrome:
          requires:
            - acceptance_test_build
            - run_basic_acceptance_tests

      - acceptance_test_iexplorer:
          requires:
            - acceptance_test_build
            - run_basic_acceptance_tests

      - run_all_acceptance_tests:
          type: approval
          requires:
            - acceptance_test_build
            - run_basic_acceptance_tests
          filters:
            branches:
              ignore:
                - develop
                - master

      - acceptance_test_edge:
          requires:
            - acceptance_test_build
            - run_all_acceptance_tests

      - acceptance_test_firefox:
          requires:
            - acceptance_test_build
            - run_all_acceptance_tests

      - acceptance_test_safari:
          requires:
            - acceptance_test_build
            - run_all_acceptance_tests

      - acceptance_test_macChrome:
          requires:
            - acceptance_test_build
            - run_all_acceptance_tests

      - acceptance_test_tabletiPad:
          requires:
            - acceptance_test_build
            - run_all_acceptance_tests

      - acceptance_test_tabletGalaxy:
          requires:
            - acceptance_test_build
            - run_all_acceptance_tests

